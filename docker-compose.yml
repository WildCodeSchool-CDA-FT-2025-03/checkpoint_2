version: '3.8'

x-baseService: &baseService
  restart: always
  healthcheck:
    interval: 1s
    timeout: 2s
    retries: 10

services:
  # Service pour la base de données PostgreSQL
  db:
    <<: *baseService
    image: postgres:15-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - db_data:/var/lib/postgresql/data/ # pour la persistance des données PostgreSQL
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password} # Valeur par défaut 'password' si non définie
      POSTGRES_DB: ${DB_NAME:-mydatabase}       
      POSTGRES_USER: ${DB_USER:-user}           
    ports:
      - "5432:5432"

  # Service pour Adminer (pour PostgreSQL)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy

  # Service pour l'API (Backend)
  api:
    <<: *baseService
    build:
      context: ./
      dockerfile: Dockerfile 
    ports:
      - "4000:4000" 
    environment:
      PORT: ${PORT:-4000}
      DATABASE_URL: postgres://${DB_USER:-user}:${DB_PASSWORD:-password}@db:5432/${DB_NAME:-mydatabase}
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy

